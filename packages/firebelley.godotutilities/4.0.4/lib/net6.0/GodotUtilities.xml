<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Firebelley.GodotUtilities</name>
    </assembly>
    <members>
        <member name="M:GodotUtilities.NodeExtension.AddToGroup(Godot.Node)">
            <summary>
            Adds the Node to a group with a name equal to the Node's type name.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:GodotUtilities.NodeExtension.RemoveAndQueueFreeChildren(Godot.Node)">
            <summary>
            Removes the node's children from the scene tree and then queues them for deletion.
            </summary>
            <param name="n"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:GodotUtilities.NodeExtension.QueueFreeChildren(Godot.Node)">
            <summary>
            Queues all child nodes for deletion.
            </summary>
            <param name="n"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:GodotUtilities.NodeExtension.IsCurrentScene(Godot.Node)">
            <summary>
            Checks if the Node is the current game's scene. Useful for checking whether the scene was run using the "Run Current Scene" button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GodotUtilities.PackedSceneExtension.ExtractData``1(Godot.PackedScene,System.Action{``0})">
            <summary>
            Instances the scene and passes it as an argument to the supplied action. Allows for "fetching" data from a packed scene without immediately using it.
            </summary>
            <param name="scene"></param>
            <param name="action"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:GodotUtilities.Physics2DDirectSpaceStateExtensions.Raycast(Godot.PhysicsDirectSpaceState2D,Godot.PhysicsRayQueryParameters2D)">
            <summary>
            Returns a RaycastResult if there is a collision, otherwise returns null.
            </summary>
            <param name="state"></param>
            <param name="from"></param>
            <param name="to"></param>
            <param name="exclude"></param>
            <param name="collisionLayer"></param>
            <param name="collideWithBodies"></param>
            <param name="collideWithAreas"></param>
            <returns></returns>
        </member>
        <member name="M:GodotUtilities.ResourcePreloaderExtension.InstanceSceneOrNull``1(Godot.ResourcePreloader,System.String)">
            <summary>
            Instances a scene with the resource name. Returns null if resource was not found or was not a packed scene.
            </summary>
            <param name="preloader"></param>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GodotUtilities.SceneTreeExtension.GetFirstNodeInGroup``1(Godot.SceneTree,System.String)">
            <summary>
            Gets the first Node as T in the group provided.
            </summary>
            <param name="sceneTree"></param>
            <param name="group"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GodotUtilities.SceneTreeExtension.GetFirstNodeInGroup``1(Godot.SceneTree)">
            <summary>
            Gets the first Node as T using T's typename as the group name.
            </summary>
            <param name="sceneTree"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:GodotUtilities.Logic.ImmediateStateMachine`1">
            <summary>
            A state machine designed for states that don't need to be updated every frame.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:GodotUtilities.Logic.LootTable`1.PickItemConditional(System.Func{GodotUtilities.Logic.LootTable{`0}.TableData,System.Boolean})">
            <summary>
            Picks an item from the loot table and returns it if <paramref name="canPickConditionalFn"/> returns <c>true</c>. 
            </summary>
            <param name="canPickConditionalFn"></param>
            <returns></returns>
        </member>
        <member name="M:GodotUtilities.ProjectSettingsExtended.GetSettingOrDefault``1(System.String)">
            <summary>
            Returns the given project setting, or default if the setting doesn't exist.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GodotUtilities.ProjectSettingsExtended.GetDebugSettingOrDefault``1(System.String)">
            <summary>
            Returns the given project setting if not a debug build. Returns default value if a debug build or if the setting doesn't exist.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
    </members>
</doc>
